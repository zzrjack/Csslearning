使用meta标签设置视口宽度，制作适配不同设备宽度的网页
目标：网页宽度和设备宽度（分辨率）相同
百分比布局（流式布局）：
效果：宽度自适应，高度固定
Flex布局
作用：避免浮动布局中脱离文档流现象发生
    适合结构化布局
设置方式：
    父元素添加display:flex,子元素可以自动挤压或拉伸
组成部分：
    弹性容器
    弹性盒子
    主轴
    侧轴/交叉轴
修改主轴对齐方式属性：justify-content
属性值：                     作用：
    flex-start：                默认值，起点开始依次排列
    flex-end                    终点开始依次排列
    center                      沿主轴居中排列
    space-around                沿主轴均匀排列，空白间距均分在弹性盒子两侧    
    space-between                                   均分在相邻盒子之间    
    space-evenly                             弹性盒子与容器之间间距相等
侧轴对齐方式aligin-items（添加到弹性容器）
    flex-start：
    flex-end
    center
    stretch    拉伸，默认值（现有状态，测试时去掉子级高度）
aligin-self：控制某个弹性盒子在侧轴的对齐方式（添加到弹性盒子）
伸缩比：
    使用flex属性修改弹性盒子伸缩比
属性：
    flex：值；
取值分类：
    数值（整数）
注意：只占用父盒子剩余尺寸

主轴方向：
	flex-direction 改变元素排列方向
			row	行，水平（默认值）
			column 	列，垂直
			row-reverse 
			column-reverse
1.主轴方向2.选择对应的属性实现主轴或侧轴的
	align-items：center； 实现盒子水平居中
	justify-content：center； 垂直居中
弹性盒子换行：
	flex-wrap：wrap；
调整行换行方式：
	align-content：space-between  
			space-around

rem：
网页效果
	屏幕宽度不同，网页元素尺寸不同（等比缩放）
rem单位：
	相对单位；相对于HTML标签的字号计算结果；1rem=1HTML字号大小
rem移动适配-媒体查询
写法：@media（媒体特性）{
	选择器{
		css属性	
}
}
目前Rem布局方案，将网页等分成10份，HTML标签的字号为视口宽的1/10.
Rem适配原理
	实现在不同宽度的设备中，元素网页尺寸等比缩放的效果（px=>rem）
通过使用flexible.js配合Rem实现在不同宽度的设备中，网页元素尺寸等比缩放效果
	根据不同的视口宽度给网页中html根节点设置不同的font-size	
VW/VH
    相对单位；
    相对于视口的尺寸计算结果
    vw：viewport width
        1vw=1/100视口宽度
    vh：viewport height
        1vh=1/100视口高度
vw单位尺寸=px单位数值/（1/100视口宽度）
	
